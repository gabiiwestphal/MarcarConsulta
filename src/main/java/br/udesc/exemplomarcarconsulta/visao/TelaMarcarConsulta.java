package br.udesc.exemplomarcarconsulta.visao;

import br.udesc.exemplomarcarconsulta.dao.ConsultaListDAO;
import br.udesc.exemplomarcarconsulta.dao.MedicoListDAO;
import br.udesc.exemplomarcarconsulta.dao.PacienteListDAO;
import br.udesc.exemplomarcarconsulta.excecao.ConsultaException;
import br.udesc.exemplomarcarconsulta.modelo.Consulta;
import br.udesc.exemplomarcarconsulta.modelo.Medico;
import br.udesc.exemplomarcarconsulta.modelo.Paciente;
import br.udesc.exemplomarcarconsulta.repositorio.ConsultaRepositorio;
import br.udesc.exemplomarcarconsulta.repositorio.MedicoRepositorio;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JOptionPane;
import br.udesc.exemplomarcarconsulta.repositorio.PacienteRepositorio;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author mattheus
 */
public class TelaMarcarConsulta extends javax.swing.JFrame {

    /**
     * Creates new form TelaMarcarConsulta
     */
    public TelaMarcarConsulta() {
        initComponents();
        initComboboxPaciente();
        initComboboxMedico();

        btnMarcarConsulta.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                marcarConsulta();
            }
        });
    }

    public void initComboboxPaciente() {
        PacienteRepositorio pacienteRepositorio = new PacienteListDAO();
        List<Paciente> pacientes = pacienteRepositorio.recuperarTodosPacientes();
        for (Paciente p : pacientes) {
            cbPaciente.addItem(p);
        }
    }

    public void initComboboxMedico() {
        MedicoRepositorio medicoRepositorio = new MedicoListDAO();
        List<Medico> medicos = medicoRepositorio.recuperarTodosMedicos();
        for (Medico m : medicos) {
            cbMedico.addItem(m);
        }
    }

    public Consulta recuperarConsulta() throws ConsultaException {
        LocalDateTime dataHoraAgendamento = getDataHora();
        Medico medico = (Medico) cbMedico.getSelectedItem();
        Paciente paciente = (Paciente) cbPaciente.getSelectedItem();
        Consulta consulta = Consulta.criarConsulta(dataHoraAgendamento, medico, paciente);

        if (paciente == null) {
            throw new ConsultaException("Nenhum paciente selecionado");
        }
        
        if (medico == null) {
            throw new ConsultaException("Nenhum medico selecionado");
        }

        return consulta;
    }

    public void marcarConsulta() {

        try {
            Consulta consulta = recuperarConsulta();
            ConsultaRepositorio consultaRepositorio = new ConsultaListDAO();
            consultaRepositorio.salvarConsulta(consulta);
            exibirMensagem("Consulta marcada com sucesso: " + consulta.toString());
            limparTela();
        } catch (ConsultaException ex) {
            exibirMensagem(ex.getMessage());
        }

    }

    public void exibirMensagem(String msg) {
        JOptionPane.showMessageDialog(null, msg);
    }

    public void limparTela() {
        edData.setText("");
        edHora.setText("");
        cbMedico.setSelectedIndex(0);
        cbPaciente.setSelectedIndex(0);
    }

    public LocalDateTime getDataHora() throws ConsultaException {
        String data = edData.getText();
        String hora = edHora.getText();
        String dataHora = data + ' ' + hora;

        try {
            DateTimeFormatter formatoData = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
            LocalDateTime dataHoraAgendamento = LocalDateTime.parse(dataHora, formatoData);
            return dataHoraAgendamento;
        } catch (DateTimeParseException e) {
            throw new ConsultaException("Data ou hora inválida");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMarcarConsulta = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        edData = new javax.swing.JTextField();
        edHora = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbPaciente = new javax.swing.JComboBox<>();
        cbMedico = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Marcar Consulta");

        btnMarcarConsulta.setText("Marcar Consulta");

        jLabel1.setText("Data");

        edHora.setToolTipText("");

        jLabel2.setText("Hora");

        jLabel3.setText("Paciente");

        jLabel4.setText("Médico");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edData, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edHora, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(cbMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(btnMarcarConsulta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnMarcarConsulta)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMarcarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMarcarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMarcarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMarcarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMarcarConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMarcarConsulta;
    private javax.swing.JComboBox<Medico> cbMedico;
    private javax.swing.JComboBox<Paciente> cbPaciente;
    private javax.swing.JTextField edData;
    private javax.swing.JTextField edHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
